定义代表着告诉编译器这儿该分配内存了。
声明代表告诉编译器我在另外一个地方定义了这个对象(或函数)
C和C++的编译器对待头文件，都只是简单地把它放进包含它的源文件里然后编译到目标文件。
ODR(one definition rule):
1. 在任意一个translation unit中， 模板，类型，函数或对象的定义不能超过一个。
2. 在整个程序中， 对象和函数的定义不能超过一次。
3. 类型，模板，和extern的inline function可以在不同的translation unit中被重复定义，
但是定义的内容必须一致。Non-extern 的对象和函数在不同编译单元内被任作是不同的。

函数的声明:
int func();
函数声明一般放入头文件中，然后每个需要调用它的source file只要引用它就行了。

函数的定义:
int func()
{
	return 1;
}
函数的定义不能放到头文件中，不然会引起多重定义，你想想，每个源文件都引用它然后编译至目标文件，
在链接的时候编译器必然不知道该用哪个定义，所以就成了多重定义。

类的声明：
class MyClass;

类的定义：
class MyClass
{
	int m_field;
}
注意，C++中类的定义可以被多次包含， 因为ODR并不限制整个程序中的类的定义次数，
只是限制在一个编译单元内的。但是类的实现是不可以多次包含的，即类的成员函数实现须放在
单独的源文件中。类模板除外。

对于对象，我们把内置类型的定义也抽象为对象的定义，有：
对象的声明:
extern MyClass mc;
和函数声明一样，这种全局的对象的声明应该放到头文件中，表示这个全局对象将在某个源文件里定义，
要使用到这个全局对象的源文件包含这个头文件即可。

对象的定义：
MyClass mc;
int a;
char c='a';
