命令行模式下的编辑：
-----------------------------------------------------------------------------------------
x,X: x为向后删一个字符，X为向前删一个字符
dd: 删除游标所在行
ndd: 删除游标所在的向下n行
yy: 复制游标所在行
nyy: 复制游标所在的向下n行
p,P: p粘帖于光标下一行  P为粘帖于光标上一行
u: undo
i,I: 在所在光标前一个位置开始插入文字
a,A: 在光标所在的下一个位置开始插入文字
o,O: 插入新的一行
r,R: 取代光标所在位置的文字，r只取代一个，R一直取代直到Esc
CTRL+Z 将VIM移至后台并暂停， 用fg唤醒到前台
-----------------------------------------------------------------------------------------

Visual模式：
-----------------------------------------------------------------------------------------
v: 基于每个字符的选择
V: 基于行的选择
Ctrl+v: 基于块的选择
选择好以后可以接上操作入y(yank),d(delete),c(change)...
-----------------------------------------------------------------------------------------

插入模式：
-----------------------------------------------------------------------------------------
i: 在光标之前插入文本
I: 在本行第一个非空白元素之前插入文本
a: 在光标之后插入文本
A: 在行末插入文本
-----------------------------------------------------------------------------------------

正常模式下的光标移动:
------------------------------------------------------------------------------------------
F[x]光标沿着本行往前移动到x处
f[x]光标沿着本行往后移动到x处
dh  光标左移  dl  光标右移   dj 光标下移 dk  光标上移   移动距离为d, 无d默认为一格
$移动到行末    ^移动到行首  H移动到该页首行   L移动到该页行   M移动到该页中间行
C修改至行尾  %对于括号移至匹配处  
Ctrl+f 屏幕向下移动一页
Ctrl+b 屏幕向上移动一页 
G 移动到档案最后一行
数字+enter 光标移动至文本第N行
-----------------------------------------------------------------------------------------

Last Line Mode:
-----------------------------------------------------------------------------------------
/[word] 向后寻找名称为word的字符串
?[word] 向前寻找名称为word的字符串
:[n1],[n2]s/[word1]/[word2]/g 在n1与n2行之间
:1,$s/[word1]/[word2]/g
:1,$s/[word1]/[word2]/gc
:w  将编辑的数据写入硬盘档案
:w! 当文档为只读时，强制写入
:q  离开
:q! 离开不保存
:wq 储存后离开
:e! 将文件还原到最开始状态
:w [filename] 另存为
:set nu 显示行号
:set nonu 取消行号
:! [command] 暂时离开vi去执行command的显示结果
-----------------------------------------------------------------------------------------

Text Object:
-----------------------------------------------------------------------------------------
word
string        ==>             action
paragraph     ==>   (yank, delete, change .. etc)
block
-----------------------------------------------------------------------------------------

语法增强： 可以在~/.vim/syntax/[filetype].vim 进行语法高亮增强行   :help syntax
编码支持:  :help encoding
快捷键：  :help map
