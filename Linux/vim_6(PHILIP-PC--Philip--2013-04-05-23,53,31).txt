命令行模式下：
Ctrl+f 屏幕向下移动一页
Ctrl+b 屏幕向上移动一页 
G 移动到档案最后一行
数字+enter 光标向下n行
x,X: x为向后删一个字符，X为向前删一个字符
dd: 删除游标所在行
ndd: 删除游标所在的向下n行
yy: 复制游标所在行
nyy: 复制游标所在的向下n行
p,P: p粘帖于光标下一行  P为粘帖于光标上一行
u: undo
i,I: 在所在光标前一个位置开始插入文字
a,A: 在光标所在的下一个位置开始插入文字
o,O: 插入新的一行
r,R: 取代光标所在位置的文字，r只取代一个，R一直取代直到Esc


Last Line Mode:
/[word] 向后寻找名称为word的字符串 n查找下一个,N查找上一个
?[word] 向前寻找名称为word的字符串
:[n1],[n2]s/[word1]/[word2]/g 在n1与n2行之间
:1,$s/[word1]/[word2]/g
:1,$s/[word1]/[word2]/gc
:w  将编辑的数据写入硬盘档案
:w! 当文档为只读时，强制写入
:q  离开
:q! 离开不保存
:wq 储存后离开
:e! 将文件还原到最开始状态
:w [filename] 另存为
:set nu 显示行号
:set nonu 取消行号
:! [command] 暂时离开vi去执行command的显示结果

Registers:
:reg   the command of viewing the registers
types of registers:
1. numbered registers("0~"9): reg"0 is used to store the content of last yy operation, while
the "1~"9 regs are used to store the last 9 contents of dd operation, 
with the reg"1 the latest.   
2. named registers("a~"z): we can copy things into these registers while we can also paste the things in regs to text.  
The "R reg is shared with "r, but when we use "R,the content is appended to its tail while the "r is replace the original content. 
3. unamed regs(""): store the last copy or delete content.
4. 短删除寄存器("-): 存储最近删除的短字符(不构成行的) 
5. 只读寄存器(":, "., "%, "#): 分别存储命令窗口最近一次命令，最近一次插入的文本，当前编辑的文件名，当前替代的文件名
6. 黑洞寄存器("_): 若不想删除和复制影响数字与具名寄存器，则使用此寄存器
7. 搜索内容寄存器("/): 存储上一次搜索的内容
