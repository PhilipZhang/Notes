1. 系统开机流程
(1) 加载BIOS程序，使之读取CMOS中的数据，并根据其配置得到第一个启动装置

(2) 读取并运行第一个启动装置上的MBR中的boot Loader(lilo, grub等)
boot loader具有的功能:1).提供菜单  2).加载核心文件,即可以直接指向可启动的程序段来开始操作系统
                      3).转交给其他loader
                      bootloader在每个系统分区的boot sector上，并且可以覆盖到MBR。

(3) 依据MBR中的分区表，loader会根据用户所选分区，识别其文件格式并加载kernel, 继而kernel侦测硬件
    并加载响应驱动程序
    核心文件为/boot/vmlinuz，为了方便硬件开发商和其他核心功能开发者，linux的核心是动态加载核心模块的。
    这些被动态加载的核心模块是放在/lib/modules下的。应该注意的是文件系统是逐步被加载的，所以不能把
    /lib和/挂载到不同的partition,否则会影响到核心模块的读取。
    还有一个问题是，若从核心是安装在其不认识的介质上的，核心会去加载该介质的驱动，但是问题就来了，
    我们根本不认识这个介质，所以无法挂载根目录，所以更无法读取到/lib/          
    modules内的驱动程序。这时就需要靠虚拟文件系统/boot/initrd,这个文件是个压缩文件，
    它的特色是它能透过
    boot loader来加载到内存当中，然后该目录被会解压缩并在内存中模拟成一个根目录，且该模拟的文件
    系统能够提供一支可运行的程序，透过该程序来加载这些核心模块，待加载完毕后，会呼叫/sbin/init

(4) kernel主动呼叫init程序，init程序会取得run-level的讯息
(5) init运行/etc/rc.d/rc.sysinit文件来准备系统的环境(网络，时区等)
(6) init运行run-level的服务(/etc/rc[0-6].d/*, 详情看对应目录下README)
(7) init运行rc.local
(8) init运行终端机模拟程序来启动login程序，等待用户登录
